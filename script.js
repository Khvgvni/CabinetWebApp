// ========== –ö–æ–Ω—Ñ–∏–≥ ==========
const API_BASE = "https://api.cabinetbot.cabinet75.ru"; // —Ç–≤–æ–π —Å–µ—Ä–≤–µ—Ä
function adminToken() {
  return sessionStorage.getItem("adm_token") || "";
}

// ========== –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–∞–ª–∫–∞–º–∏ ==========
function openModal(id) {
  document.querySelectorAll(".modal").forEach(m => {
    m.style.display = "none";
    m.setAttribute("aria-hidden", "true");
  });
  const modal = document.getElementById(id);
  if (!modal) return;
  modal.style.display = "flex";
  modal.setAttribute("aria-hidden", "false");
  document.documentElement.style.overflow = "hidden";

  if (id === "cardModal") renderCard();
  if (id === "profileModal") loadProfile(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏
  if (id === "posterModal") loadPosters();  // üî• –ó–∞–≥—Ä—É–∂–∞–µ–º –∞—Ñ–∏—à—É –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏
  if (id === "cardModal") loadCards();  

  modal.classList.remove("animate");
  void modal.offsetWidth;
  modal.classList.add("animate");
}

function closeModal(id) {
  const modal = document.getElementById(id);
  if (modal) {
    modal.style.display = "none";
    modal.setAttribute("aria-hidden", "true");
  }
  const anyOpen = Array.from(document.querySelectorAll(".modal"))
    .some(m => m.style.display === "flex");
  if (!anyOpen) document.documentElement.style.overflow = "";
}

// ========== –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –º–µ–Ω—é ==========
const menuImages = [
  "https://raw.githubusercontent.com/Khvgvni/CabinetWebApp/main/menu1.png",
  "https://raw.githubusercontent.com/Khvgvni/CabinetWebApp/main/menu2.png",
  "https://raw.githubusercontent.com/Khvgvni/CabinetWebApp/main/menu3.png",
  "https://raw.githubusercontent.com/Khvgvni/CabinetWebApp/main/menu4.png",
  "https://raw.githubusercontent.com/Khvgvni/CabinetWebApp/main/menu5.png",
  "https://raw.githubusercontent.com/Khvgvni/CabinetWebApp/main/menu6.png",
  "https://raw.githubusercontent.com/Khvgvni/CabinetWebApp/main/menu7.png"
];

function renderMenu() {
  const container = document.getElementById("menuContainer");
  if (!container) return;
  container.innerHTML = "";
  menuImages.forEach(src => {
    const img = document.createElement("img");
    img.src = src;
    img.className = "menu-img";
    img.loading = "lazy";
    container.appendChild(img);
  });
}

// ========== –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã–π ==========
function openInvitation() {
  const container = document.getElementById("invitationContainer");
  if (container) {
    container.innerHTML = "";
    const img = document.createElement("img");
    img.src = "https://raw.githubusercontent.com/Khvgvni/CabinetWebApp/main/Invitation-new.png";
    img.className = "menu-img";
    img.loading = "lazy";
    container.appendChild(img);
  }
  openModal("invitationModal");
}

// ========== –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º ==========
async function sendMessage(message) {
  try {
    const resp = await fetch(`${API_BASE}api/banners/cabinet75`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "X-App-Secret": "superlong_random_secret_32chars"
      },
      body: JSON.stringify({ text: message })
    });
    if (!resp.ok) console.warn("Proxy status:", resp.status);
  } catch (err) {
    console.warn("Proxy error:", err);
  }
}

// ========== –ö–ª—É–±–Ω–∞—è –∫–∞—Ä—Ç–∞ ==========
async function renderCard() {
  const cardImg = document.getElementById("userCardImg");
  if (!cardImg) return;

  try {
    // –ø–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram WebApp
    const userId = window.Telegram?.WebApp?.initDataUnsafe?.user?.id;
    if (!userId) return;

    // –∑–∞–ø—Ä–æ—Å –ø—Ä–æ—Ñ–∏–ª—è
    const resp = await fetch(`${API_BASE}/api/user/status?id=${userId}`);
    const data = await resp.json();

    if (!data.ok || !data.user) {
      cardImg.src = "https://raw.githubusercontent.com/Khvgvni/CabinetWebApp/main/card.png"; // –¥–µ—Ñ–æ–ª—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞
      return;
    }

    const status = (data.user.status || "Default").toLowerCase();
    let cardSrc = "https://raw.githubusercontent.com/Khvgvni/CabinetWebApp/main/card.png";

    if (status === "black") cardSrc = "https://raw.githubusercontent.com/Khvgvni/CabinetWebApp/main/card_black.png";
    if (status === "silver") cardSrc = "https://raw.githubusercontent.com/Khvgvni/CabinetWebApp/main/card_silver.png";
    if (status === "gold") cardSrc = "https://raw.githubusercontent.com/Khvgvni/CabinetWebApp/main/card_gold.png";

    cardImg.src = cardSrc;
  } catch (e) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–ª—É–±–Ω–æ–π –∫–∞—Ä—Ç—ã:", e);
    cardImg.src = "https://raw.githubusercontent.com/Khvgvni/CabinetWebApp/main/card.png"; // fallback
  }
}

// ========== –ü—Ä–æ—Ñ–∏–ª—å ==========
async function loadProfile() {
  try {
    const tg = window.Telegram.WebApp;
    const userId = tg.initDataUnsafe?.user?.id;
    if (!userId) throw new Error("–ù–µ –Ω–∞–π–¥–µ–Ω telegram_id");

    const res = await fetch(`${API_BASE}/api/user/status?id=${userId}`);
    const data = await res.json();

    if (data.ok && data.user) {
      const { name, phone, status } = data.user;

      document.getElementById("profileName").innerText = name || "-";
      document.getElementById("profilePhone").innerText = phone || "-";
      document.getElementById("profileStatus").innerText = status || "Default";

      // —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ localStorage (–¥–ª—è –∫–∞—Ä—Ç)
      localStorage.setItem("userCard", (status || "default").toLowerCase());
      renderCard();

    } else {
      document.getElementById("profileName").textContent = "‚Äî";
      document.getElementById("profilePhone").textContent = "‚Äî";
      document.getElementById("profileStatus").textContent = "–ù–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω";
    }
  } catch (e) {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è:", e);
    document.getElementById("profileName").textContent = "‚Äî";
    document.getElementById("profilePhone").textContent = "‚Äî";
    document.getElementById("profileStatus").textContent = "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏";
  }
}

// ========== Init ==========
window.addEventListener("DOMContentLoaded", () => {
  renderMenu();

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–º—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ø–æ —É—Ä–ª—É)
const APP_NAME = window.location.href.includes("CabinetVladikWebApp") ? "cabinetvladik" : "cabinet75";

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–æ–∫
async function sendToServer(endpoint, payload) {
  try {
    const resp = await fetch(`${API_BASE}${endpoint}`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ ...payload, appName: APP_NAME }) // <<< —Å—é–¥–∞ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º appName
    });
    const data = await resp.json();
    if (!data.ok) throw new Error(data.error || "–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞");
    return data;
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:", err.message);
    alert("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
  }
}

// ==== –ë—Ä–æ–Ω—å —Å—Ç–æ–ª–∞ ====
const bookForm = document.getElementById("bookTableForm");
if (bookForm) bookForm.addEventListener("submit", async e => {
  e.preventDefault();
  const name = document.getElementById("name")?.value || "";
  const phone = document.getElementById("phone")?.value || "";
  const guests = document.getElementById("guests")?.value || 1;

  await sendToServer("/api/book/table", { name, phone, guests });
  alert("‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –±—Ä–æ–Ω—å –ø—Ä–∏–Ω—è—Ç–∞!");
  closeModal("bookTableModal");
});

// ==== –¢–∞–∫—Å–∏ ====
const taxiForm = document.getElementById("taxiForm");
if (taxiForm) taxiForm.addEventListener("submit", async e => {
  e.preventDefault();
  const name = document.getElementById("taxiName")?.value || "";
  const phone = document.getElementById("taxiPhone")?.value || "";
  const address = document.getElementById("taxiAddress")?.value || "";

  await sendToServer("/api/book/taxi", { name, phone, address });
  alert("‚úÖ –ó–∞—è–≤–∫–∞ –Ω–∞ —Ç–∞–∫—Å–∏ –ø—Ä–∏–Ω—è—Ç–∞!");
  closeModal("taxiModal");
});

// ==== –ö–æ–º–∞–Ω–¥–∞ ====
const teamForm = document.getElementById("joinTeamForm");
if (teamForm) teamForm.addEventListener("submit", async e => {
  e.preventDefault();
  const name = document.getElementById("teamName")?.value || "";
  const phone = document.getElementById("teamPhone")?.value || "";
  const role = document.getElementById("teamRole")?.value || "";

  await sendToServer("/api/book/team", { name, phone, role });
  alert("‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏!");
  closeModal("joinTeamModal");
});

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
  const tg = window.Telegram?.WebApp;
  if (tg) {
    tg.ready();
    tg.expand();
  }
});

// ========== –ü—Ä–µ–ª–æ–∞–¥–µ—Ä ==========
window.addEventListener("load", () => {
  const preloader = document.getElementById("preloader");
  if (!preloader) return;
  setTimeout(() => {
    preloader.classList.add("hide");
    preloader.setAttribute("aria-hidden", "true");
    setTimeout(() => (preloader.style.display = "none"), 1000);
  }, 1500);
});

setTimeout(() => {
  const preloader = document.getElementById("preloader");
  if (preloader && preloader.style.display !== "none") {
    preloader.classList.add("hide");
    preloader.setAttribute("aria-hidden", "true");
    setTimeout(() => preloader.remove(), 1000);
  }
}, 4000);

// ========== –ê–¥–º–∏–Ω–∫–∞ ==========
function openTab(id) {
  document.querySelectorAll(".tab-content").forEach(el => el.style.display = "none");
  document.querySelectorAll(".tab-btn").forEach(el => el.classList.remove("active"));
  document.getElementById(id).style.display = "block";
  const activeBtn = document.querySelector(`.tab-btn[onclick="openTab('${id}')"]`);
  if (activeBtn) activeBtn.classList.add("active");
  
  if (id === "bannersTab") loadBanners();
  if (id === "usersTab") loadUsers();
}

// --- –õ–æ–≥–∏–Ω –∞–¥–º–∏–Ω–∞ ---
async function adminLogin() {
  const password = document.getElementById("adminPassword").value.trim();
  if (!password) return alert("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å");
  
  try {
    const resp = await fetch(`${API_BASE}/api/admin/login`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ password, app: "cabinet75" })
    });
    const data = await resp.json();
    if (!data.ok) return alert(data.error || "–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞");
    
    sessionStorage.setItem("adm_token", data.token);
    document.getElementById("adminLogin").style.display = "none";
    document.getElementById("adminPanel").style.display = "block";
    openTab('bannersTab');
  } catch (error) {
    alert("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: " + error.message);
  }
}

// --- –ê—Ñ–∏—à–∏ ---
async function uploadBanner() {
  const fileInput = document.getElementById("bannerFile");
  const f = fileInput.files[0];
  if (!f) return alert("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª");
  
  const fd = new FormData();
  fd.append("image", f);
  
  try {
    const resp = await fetch(`${API_BASE}/api/admin/banners/cabinet75`, {
      method: "POST",
      headers: { "Authorization": `Bearer ${adminToken()}` },
      body: fd
    });
    const data = await resp.json();
    if (!data.ok) return alert(data.error || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏");
    
    alert("–ê—Ñ–∏—à–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!");
    fileInput.value = ""; // –û—á–∏—â–∞–µ–º input
    loadBanners();
  } catch (error) {
    alert("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: " + error.message);
  }
}

// === –ó–∞–≥—Ä—É–∑–∫–∞ –∞—Ñ–∏—à ===
async function loadBanners() {
  try {
    const resp = await fetch(`${API_BASE}/api/banners/cabinet75`);
    const data = await resp.json();
    const list = document.getElementById("bannersList");
    list.innerHTML = "";

    if (data.ok && data.banners && data.banners.length) {
      data.banners.forEach(b => {
        const div = document.createElement("div");
        div.className = "banner-item";

        div.innerHTML = `
          <img src="${API_BASE}${b.image}" alt="${b.title || ''}" class="menu-img" loading="lazy" />
          <p>${b.title || ''}</p>
          <button class="delete-btn" onclick="deleteBanner(${b.id})">–£–¥–∞–ª–∏—Ç—å</button>
        `;

        list.appendChild(div);
      });
    } else {
      list.innerHTML = "<p>–ù–µ—Ç –∞—Ñ–∏—à</p>";
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—Ñ–∏—à:", error);
    document.getElementById("bannersList").innerHTML = "<p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</p>";
  }
}

// === –£–¥–∞–ª–µ–Ω–∏–µ –∞—Ñ–∏—à–∏ ===
async function deleteBanner(id) {
  if (!confirm("–£–¥–∞–ª–∏—Ç—å –∞—Ñ–∏—à—É?")) return;
  try {
    const resp = await fetch(`${API_BASE}/api/admin/banners/cabinet75/${id}`, {
      method: "DELETE",
      headers: {
        "Authorization": "Bearer " + localStorage.getItem("token") // –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
      }
    });

    const data = await resp.json();
    if (data.ok) {
      alert("–ê—Ñ–∏—à–∞ —É–¥–∞–ª–µ–Ω–∞!");
      loadBanners(); // –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
    } else {
      alert("–û—à–∏–±–∫–∞: " + data.error);
    }
  } catch (e) {
    alert("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: " + e.message);
  }
}

// === –Ω–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è ===
async function deleteBanner(id) {
  if (!confirm("–£–¥–∞–ª–∏—Ç—å –∞—Ñ–∏—à—É?")) return;

  try {
    const resp = await fetch(`${API_BASE}/api/admin/banners/cabinet75/${id}`, {
      method: "DELETE",
      headers: { "Authorization": `Bearer ${adminToken()}` }
    });
    const data = await resp.json();
    if (!data.ok) return alert(data.error || "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏");

    alert("–ê—Ñ–∏—à–∞ —É–¥–∞–ª–µ–Ω–∞!");
    loadBanners(); // –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
  } catch (e) {
    alert("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: " + e.message);
  }
}

// --- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ---
async function setUserStatus() {
  const name = document.getElementById("userName").value.trim();
  const phone = document.getElementById("userPhone").value.trim();
  const status = document.getElementById("userStatus").value;
  const telegram_id = prompt("–í–≤–µ–¥–∏—Ç–µ Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:");
  
  if (!telegram_id) return alert("Telegram ID –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω");
  
  try {
    const resp = await fetch(`${API_BASE}/api/admin/user/status`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer ${adminToken()}`
      },
      body: JSON.stringify({ name, phone, status, telegram_id })
    });
    const data = await resp.json();
    if (!data.ok) return alert(data.error || "–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è");
    
    alert("–°—Ç–∞—Ç—É—Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω!");
    document.getElementById("userName").value = "";
    document.getElementById("userPhone").value = "";
    loadUsers();
  } catch (error) {
    alert("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: " + error.message);
  }
}

async function loadUsers() {
  try {
    // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const resp = await fetch(`${API_BASE}/api/admin/users`, {
      headers: { "Authorization": `Bearer ${adminToken()}` }
    });
    const data = await resp.json();
    const list = document.getElementById("usersList");
    list.innerHTML = "";
    
    if (data.ok && data.users && data.users.length) {
      data.users.forEach(u => {
        const card = document.createElement("div");
        card.className = "user-card";
        card.innerHTML = `
          <strong>${u.name || "–ë–µ–∑ –∏–º–µ–Ω–∏"}</strong><br>
          –¢–µ–ª: ${u.phone || "‚Äî"}<br>
          ID: ${u.telegram_id}<br>
          –°—Ç–∞—Ç—É—Å: ${u.status || "Default"}<br>
          <small>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: ${new Date(u.created_at).toLocaleDateString()}</small>
        `;
        list.appendChild(card);
      });
    } else {
      list.innerHTML = "<p>–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</p>";
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", error);
    document.getElementById("usersList").innerHTML = "<p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</p>";
  }
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º –∞—Ñ–∏—à—É
async function loadPosters() {
  const container = document.getElementById("posterContainer");
  container.innerHTML = "–ó–∞–≥—Ä—É–∑–∫–∞ –∞—Ñ–∏—à–∏...";

  try {
    const res = await fetch("https://api.cabinetbot.cabinet75.ru/api/banners/cabinet75");
    const data = await res.json();

    if (data.ok) {
      container.innerHTML = "";
      data.banners.forEach(b => {
        const div = document.createElement("div");
        div.className = "poster-item";
        div.innerHTML = `<img src="https://api.cabinetbot.cabinet75.ru${b.image}" alt="${b.title}" /><p>${b.title}</p>`;
        container.appendChild(div);
      });
    } else {
      container.innerHTML = "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—Ñ–∏—à–∏.";
    }
  } catch (e) {
    console.error("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏:", e);
    container.innerHTML = "–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞—Ñ–∏—à–∏.";
  }
}

// --- –†–∞—Å—Å—ã–ª–∫–∞ ---
async function sendBroadcast() {
  const text = document.getElementById("broadcastText").value.trim();
  const status = document.getElementById("broadcastStatus").value;
  const phones = document.getElementById("broadcastPhones").value.trim();
  
  if (!text) return alert("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è");
  
  try {
    const resp = await fetch(`${API_BASE}/api/admin/broadcast`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer ${adminToken()}`
      },
      body: JSON.stringify({ text, status: status || undefined, phones: phones || undefined })
    });
    const data = await resp.json();
    if (!data.ok) return alert(data.error || "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏");
    
    alert(`‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (${data.count || 0} –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π)`);
    document.getElementById("broadcastText").value = "";
    document.getElementById("broadcastStatus").value = "";
    document.getElementById("broadcastPhones").value = "";
  } catch (err) {
    alert("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–∞—Å—Å—ã–ª–∫–∏: " + err.message);
  }
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∞–¥–º–∏–Ω–∫–∏
document.getElementById('adminModal').addEventListener('click', function(e) {
  if (e.target === this) {
    const token = adminToken();
    if (token) {
      document.getElementById("adminLogin").style.display = "none";
      document.getElementById("adminPanel").style.display = "block";
    }
  }
});
